import { initialState } from './selectors'
import {
RXDB_FIREBASE_SYNC,
RXDB_COLLECTION_INSERT_REQUEST,
RXDB_COLLECTION_INSERT_SUCCESS,
RXDB_COLLECTION_INSERT_FAILURE,
RXDB_COLLECTION_NEW_DOCUMENT_REQUEST,
RXDB_COLLECTION_NEW_DOCUMENT_SUCCESS,
RXDB_COLLECTION_NEW_DOCUMENT_FAILURE,
RXDB_COLLECTION_UPSERT_ATOMIC_REQUEST,
RXDB_COLLECTION_UPSERT_ATOMIC_SUCCESS,
RXDB_COLLECTION_UPSERT_ATOMIC_FAILURE,
RXDB_COLLECTION_FIND_REQUEST,
RXDB_COLLECTION_FIND_SUCCESS,
RXDB_COLLECTION_FIND_FAILURE,
RXDB_COLLECTION_FIND_ONE_REQUEST,
RXDB_COLLECTION_FIND_ONE_SUCCESS,
RXDB_COLLECTION_FIND_ONE_FAILURE,
RXDB_COLLECTION_DUMP_REQUEST,
RXDB_COLLECTION_DUMP_SUCCESS,
RXDB_COLLECTION_DUMP_FAILURE,
RXDB_COLLECTION_IMPORT_DUMP_REQUEST,
RXDB_COLLECTION_IMPORT_DUMP_SUCCESS,
RXDB_COLLECTION_IMPORT_DUMP_FAILURE,
RXDB_COLLECTION_SYNC_REQUEST,
RXDB_COLLECTION_SYNC_SUCCESS,
RXDB_COLLECTION_SYNC_FAILURE,
RXDB_COLLECTION_REMOVE_REQUEST,
RXDB_COLLECTION_REMOVE_SUCCESS,
RXDB_COLLECTION_REMOVE_FAILURE,
RXDB_DOCUMENT_GET_REQUEST,
RXDB_DOCUMENT_GET_SUCCESS,
RXDB_DOCUMENT_GET_FAILURE,
RXDB_DOCUMENT_SET_REQUEST,
RXDB_DOCUMENT_SET_SUCCESS,
RXDB_DOCUMENT_SET_FAILURE,
RXDB_DOCUMENT_SAVE_REQUEST,
RXDB_DOCUMENT_SAVE_SUCCESS,
RXDB_DOCUMENT_SAVE_FAILURE,
RXDB_DOCUMENT_REMOVE_REQUEST,
RXDB_DOCUMENT_REMOVE_SUCCESS,
RXDB_DOCUMENT_REMOVE_FAILURE,
RXDB_DOCUMENT_UPDATE_REQUEST,
RXDB_DOCUMENT_UPDATE_SUCCESS,
RXDB_DOCUMENT_UPDATE_FAILURE,
RXDB_DOCUMENT_ATOMIC_UPDATE_REQUEST,
RXDB_DOCUMENT_ATOMIC_UPDATE_SUCCESS,
RXDB_DOCUMENT_ATOMIC_UPDATE_FAILURE,
RXDB_DATABASE_WAIT_FOR_LEADERSHIP_REQUEST,
RXDB_DATABASE_WAIT_FOR_LEADERSHIP_SUCCESS,
RXDB_DATABASE_WAIT_FOR_LEADERSHIP_FAILURE,
RXDB_DATABASE_DUMP_REQUEST,
RXDB_DATABASE_DUMP_SUCCESS,
RXDB_DATABASE_DUMP_FAILURE,
RXDB_DATABASE_IMPORT_DUMP_REQUEST,
RXDB_DATABASE_IMPORT_DUMP_SUCCESS,
RXDB_DATABASE_IMPORT_DUMP_FAILURE,
RXDB_DATABASE_REQUEST_IDLE_PROMISE_REQUEST,
RXDB_DATABASE_REQUEST_IDLE_PROMISE_SUCCESS,
RXDB_DATABASE_REQUEST_IDLE_PROMISE_FAILURE,
RXDB_DATABASE_DESTROY_REQUEST,
RXDB_DATABASE_DESTROY_SUCCESS,
RXDB_DATABASE_DESTROY_FAILURE,
RXDB_DATABASE_REMOVE_REQUEST,
RXDB_DATABASE_REMOVE_SUCCESS,
RXDB_DATABASE_REMOVE_FAILURE,
RXDB_DATABASE_CHECK_ADAPTER_REQUEST,
RXDB_DATABASE_CHECK_ADAPTER_SUCCESS,
RXDB_DATABASE_CHECK_ADAPTER_FAILURE,
} from './actions'

export default (state = initialState, {type, payload, metadata}) => {
  switch (type) {
    case RXDB_COLLECTION_FIND_SUCCESS:
      return {
        ...state,
        [metadata.delta]: {
          ...payload
        }
      }
    case RXDB_FIREBASE_SYNC:
      return {
        ...state,
        [metadata.entity]: {
          ...payload
        }
      }
    default:
      return state
  }
}
